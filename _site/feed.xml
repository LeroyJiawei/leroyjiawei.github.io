<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JJW | 's 学习笔记</title>
    <description>use Jekyll template to build such a site on pages.github.com</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 11 Sep 2019 18:20:02 +0800</pubDate>
    <lastBuildDate>Wed, 11 Sep 2019 18:20:02 +0800</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>CRUSH Overview</title>
        <description>&lt;h1 id=&quot;-crush-overview&quot;&gt;&lt;font style=&quot;color: #6495ED&quot;&gt; CRUSH Overview&lt;/font&gt;&lt;/h1&gt; &lt;p&gt;Controlled Replication Under Scalable Hashing&lt;/p&gt; &lt;h2 id=&quot;-解决的问题-&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; 解决的问题 &lt;/font&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;存储设备数量变化，且异构的存储设备（&lt;font style=&quot;color: #2E8B57&quot;&gt; 数据迁移 &lt;/font&gt;）&lt;/li&gt; &lt;li&gt;数据备份（&lt;font style=&quot;color: #2E8B57&quot;&gt; 可靠性&lt;/font&gt;）&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;-crush算法-&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; CRUSH算法 &lt;/font&gt;&lt;/h2&gt; &lt;h3 id=&quot;straw2算法-&quot;&gt;straw2算法&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;输入：数据唯一标志符（pg_id），存储拓扑（crush map），数据备份策略（placement rule）&lt;/li&gt; &lt;li&gt;时间复杂度：O(&lt;em&gt;N&lt;/em&gt;)，但是抵御结构变化的能力好。&lt;/li&gt; &lt;li&gt;与straw相比，straw2计算签长时仅使用自身长度。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;cluster-map&quot;&gt;cluster map&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;ceph集群拓扑的&lt;font style=&quot;color: #2E8B57&quot;&gt;逻辑&lt;/font&gt;描述：&lt;/p&gt; &lt;p&gt;root –&amp;gt; bucket &lt;em&gt;X n&lt;/em&gt; –&amp;gt; device,device也可以抽象为一个bucket&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;每个节点拥有一个唯一的数字ID，只有叶节点（device）有非负的数字ID。&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;placement-rule数据分布策略&quot;&gt;placement rule，数据分布策略&lt;/h3&gt; &lt;p&gt;三个操作：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;take：从cluster map中选择指定的bucket&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select(pg_id, cluster map, rule)&lt;/code&gt;：从输入的bucket中随机选择指定类型和数量的items &lt;ul&gt; &lt;li&gt;备份策略：多副本 &amp;amp; 纠删码&lt;/li&gt; &lt;li&gt;相应算法：firstn &amp;amp; indep&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;emit：输出选择结果给上级调用并返回&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;-crush-code-&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; CRUSH Code &lt;/font&gt;&lt;/h2&gt; &lt;h3 id=&quot;test-framework&quot;&gt;test framework&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/google/googletest&quot;&gt;google test&lt;/a&gt;&lt;/li&gt;...</description>
        <pubDate>Mon, 09 Sep 2019 20:48:05 +0800</pubDate>
        <link>/crushoverview/</link>
        <guid isPermaLink="true">/crushoverview/</guid>
        
        <category>notes</category>
        
        <category>CRUSH</category>
        
        <category>Ceph</category>
        
        <category>gtest</category>
        
        <category>google</category>
        
        <category>notes</category>
      </item>
    
      <item>
        <title>C Tips</title>
        <description>&lt;h1 id=&quot;c-tips&quot;&gt;C Tips&lt;/h1&gt;
&lt;h3 id=&quot;sort-in-c&quot;&gt;sort in C&lt;/h3&gt;

&lt;p&gt;header: stdlib.h&lt;/p&gt;

&lt;p&gt;prototype: &lt;code class=&quot;highlighter-rouge&quot;&gt;void qsort(void *base,int nelem,int width,int (*fcmp)(const void *,const void *));&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;参数：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;待排序数组首地址&lt;/li&gt;
  &lt;li&gt;数组中待排序元素数量&lt;/li&gt;
  &lt;li&gt;各元素的占用空间大小&lt;/li&gt;
  &lt;li&gt;指向函数的指针，用于确定排序的顺序&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;array-copy-in-c&quot;&gt;array copy in C&lt;/h3&gt;

&lt;p&gt;header: string.h&lt;/p&gt;

&lt;p&gt;prototype: &lt;code class=&quot;highlighter-rouge&quot;&gt;void *memcpy(void*dest, const void *src, size_t n);&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Sep 2019 20:48:05 +0800</pubDate>
        <link>/Ctips/</link>
        <guid isPermaLink="true">/Ctips/</guid>
        
        <category>tips</category>
        
        <category>C</category>
        
        <category>tips</category>
      </item>
    
      <item>
        <title>gRPC Overview</title>
        <description>&lt;h2 id=&quot;--grpc-guide-&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; gRPC Guide &lt;/font&gt;&lt;/h2&gt; &lt;h3 id=&quot;service-defination-&quot;&gt;service defination&lt;/h3&gt; &lt;p&gt;基于protocal buffers，关键字 &lt;code class=&quot;highlighter-rouge&quot;&gt;service&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;rpc&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;rpc分类：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;unary RPCs &lt;ul&gt; &lt;li&gt;server: &lt;code class=&quot;highlighter-rouge&quot;&gt;funcname(ServerContext* context, receiveObj, retObj)&lt;/code&gt;&lt;/li&gt; &lt;li&gt;client: &lt;code class=&quot;highlighter-rouge&quot;&gt;Status funcname(ServerContext* context, putObj, getObj)&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Server streaming RPCs &lt;ul&gt; &lt;li&gt;server: &lt;code class=&quot;highlighter-rouge&quot;&gt;funcname(ServerContext* context, receeiveObj, ServerWriter)&lt;/code&gt;&lt;/li&gt; &lt;li&gt;client: &lt;code class=&quot;highlighter-rouge&quot;&gt;ClientReader funcname(ServerContext* context, putObj)&lt;/code&gt; follow by &lt;code class=&quot;highlighter-rouge&quot;&gt;reader.read()&lt;/code&gt; and end with &lt;code class=&quot;highlighter-rouge&quot;&gt;Status status = reader-&amp;gt;Finish();&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Client streaming RPC &lt;ul&gt; &lt;li&gt;server: &lt;code class=&quot;highlighter-rouge&quot;&gt;funcname(ServerContext* context, ServerReader, retObj)&lt;/code&gt;&lt;/li&gt; &lt;li&gt;client: &lt;code class=&quot;highlighter-rouge&quot;&gt;ClientWriter funcname(ServerContext* context, getObj)&lt;/code&gt; follow by &lt;code class=&quot;highlighter-rouge&quot;&gt;writer.write()&lt;/code&gt; and end with &lt;code class=&quot;highlighter-rouge&quot;&gt;writer-&amp;gt;WritesDone(); Status status = writer-&amp;gt;Finish();&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Bidirectional streaming RPCs &lt;ul&gt;...</description>
        <pubDate>Sun, 01 Sep 2019 20:48:05 +0800</pubDate>
        <link>/grpc/</link>
        <guid isPermaLink="true">/grpc/</guid>
        
        <category>notes</category>
        
        <category>gRPC</category>
        
        <category>google</category>
        
        <category>notes</category>
      </item>
    
      <item>
        <title>Protocal Buffers Overview</title>
        <description>&lt;h2 id=&quot;-proto-file---&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; *.proto* file &lt;/font&gt;&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;：打算序列化的数据结构单位 –&amp;gt; 为每个mmessage和message中的每个field命名。&lt;/p&gt; &lt;h3 id=&quot;语法&quot;&gt;语法&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tutorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt; 包分割管理，避免命名冲突&lt;/li&gt; &lt;li&gt;基础数据类型，包含bool, int32, float, double, and string&lt;/li&gt; &lt;li&gt;复杂数据类型：自定义&lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;，可嵌套定义&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=1&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;=2&lt;/code&gt;： 是二进制编码时对数据成员的唯一tag。（tip：1-15编码少于一个字节，因此常必需字段用1-15，repeated字段会对其分配的数字tag re-encoding）&lt;/li&gt; &lt;li&gt;modifiers：每个field都必须有一个修饰语 &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;required&lt;/code&gt;：必需字段，如果debug阶段出现，则会产生assertion错误。&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;optional&lt;/code&gt;：可选字段，可填写默认值（&lt;code class=&quot;highlighter-rouge&quot;&gt;[default = HOME];&lt;/code&gt;），如果未填写，则系统默认基础类型值。&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;repeated&lt;/code&gt;：可重复字段，可以为0次。&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3 id=&quot;编译proto文件&quot;&gt;编译&lt;em&gt;.proto&lt;/em&gt;文件&lt;/h3&gt; &lt;p&gt;for c++： &lt;code class=&quot;highlighter-rouge&quot;&gt;protoc -I=$SRC_DIR --cpp_out=$DST_DIR $SRC_DIR/addressbook.proto&lt;/code&gt;&lt;/p&gt; &lt;h2 id=&quot;-generated-protobuf-api--&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; generated protobuf API &lt;/font&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;getters：&lt;em&gt;.proto&lt;/em&gt; 文件中定义的field的名字的小写&lt;/li&gt; &lt;li&gt;setters：前缀&lt;code class=&quot;highlighter-rouge&quot;&gt;set_&lt;/code&gt; + 定义的名称&lt;/li&gt; &lt;li&gt;是否存在：&lt;code class=&quot;highlighter-rouge&quot;&gt;has_&lt;/code&gt; + 定义的名称&lt;/li&gt; &lt;li&gt;清空：&lt;code class=&quot;highlighter-rouge&quot;&gt;clear_&lt;/code&gt; + 定义的名称&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;字符串类型field的额外API：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mutable_&lt;/code&gt; + 定义的名称&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;repeated field 的额外函数：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;名称 + &lt;code class=&quot;highlighter-rouge&quot;&gt;_size()&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;枚举类型与嵌套类：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;类名称::field名称&lt;/li&gt;...</description>
        <pubDate>Fri, 30 Aug 2019 20:48:05 +0800</pubDate>
        <link>/protobuf/</link>
        <guid isPermaLink="true">/protobuf/</guid>
        
        <category>notes</category>
        
        <category>protobuf</category>
        
        <category>google</category>
        
        <category>notes</category>
      </item>
    
      <item>
        <title>Some Colors with RGB Value</title>
        <description>&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;color name&lt;/th&gt; &lt;th&gt;RGB&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #F0F8FF;&quot;&gt;AliceBlue&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#F0F8FF&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #FAEBD7;&quot;&gt;AntiqueWhite&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#FAEBD7&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #00FFFF;&quot;&gt;Aqua&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#00FFFF&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #7FFFD4;&quot;&gt;Aquamarine&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#7FFFD4&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #F0FFFF;&quot;&gt;Azure&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#F0FFFF&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #F5F5DC;&quot;&gt;Beige&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#F5F5DC&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #FFE4C4;&quot;&gt;Bisque&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#FFE4C4&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #000000;&quot;&gt;Black&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#000000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #FFEBCD;&quot;&gt;BlanchedAlmond&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#FFEBCD&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #0000FF;&quot;&gt;Blue&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#0000FF&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #8A2BE2;&quot;&gt;BlueViolet&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#8A2BE2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #A52A2A;&quot;&gt;Brown&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#A52A2A&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #DEB887;&quot;&gt;BurlyWood&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#DEB887&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #5F9EA0;&quot;&gt;CadetBlue&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#5F9EA0&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;font style=&quot;color: #7FFF00;&quot;&gt;Chartreuse&lt;/font&gt;&lt;/td&gt; &lt;td&gt;#7FFF00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;...</description>
        <pubDate>Fri, 30 Aug 2019 20:48:05 +0800</pubDate>
        <link>/colors/</link>
        <guid isPermaLink="true">/colors/</guid>
        
        <category>tips</category>
        
        <category>RGB</category>
        
        <category>tips</category>
      </item>
    
      <item>
        <title>VIM 使用tips</title>
        <description>&lt;blockquote&gt; &lt;p&gt;📌转载自&lt;strong&gt;&lt;a href=&quot;https://hualong1009.github.io&quot;&gt;@hualong1009&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt; &lt;p&gt;这个库是用Xmind做的VIM编辑器的用法思维导图。里面包含一些不常用的用法，但是感觉可以很大的提高编辑效率。&lt;/p&gt; &lt;h1 id=&quot;vim用法&quot;&gt;VIM用法&lt;/h1&gt; &lt;p&gt;VIM编辑器的用法，包含基础用法和高级用法。 VIM的配置文件是用户家目录下.vimrc, 例如通过修改该文件加入inoremap jj &amp;lt;Esc&amp;gt;, 从而映射ESC键到两次j键，可以提高操作效率&lt;/p&gt; &lt;h1 id=&quot;思维导图&quot;&gt;思维导图&lt;/h1&gt; &lt;p&gt;&lt;a href=&quot;https://tatenxu.github.io/assets/files/vim.xmind&quot;&gt;xmind文件&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;-normal-mode-&quot;&gt;&lt;font style=&quot;color: #778899&quot;&gt; Normal-mode &lt;/font&gt;&lt;/h2&gt; &lt;p&gt;用于浏览文件，也包含复制，粘贴，删除等操作。这种模式下，键盘按键会当做功能键处理，不会真正的键入这些字符&lt;/p&gt; &lt;h3 id=&quot;漫游&quot;&gt;漫游&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;h 向左&lt;/li&gt; &lt;li&gt;j 向下&lt;/li&gt; &lt;li&gt;k 向上&lt;/li&gt; &lt;li&gt;l 向右&lt;/li&gt; &lt;li&gt;0 跳到行首&lt;/li&gt; &lt;li&gt;^ 跳到行首第一个非空字符&lt;/li&gt; &lt;li&gt;$ 跳到行尾&lt;/li&gt; &lt;li&gt;gg 跳到文件的第一行的行首&lt;/li&gt; &lt;li&gt;G 快速到文件的最后一行的行尾&lt;/li&gt; &lt;li&gt;% 匹配括号移动，包括(,{,[&lt;/li&gt; &lt;li&gt;* | # 匹配光标当前所在的单词，移动光标到下一个单词处，*是下一个，#是上一个&lt;/li&gt; &lt;li&gt;ctrl+f 查看下一页内容&lt;/li&gt; &lt;li&gt;ctrl+b 查看上一页内容&lt;/li&gt; &lt;li&gt;100G 跳转到第一百行的行首&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;复制&quot;&gt;复制&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;yy 复制光标所在整行&lt;/li&gt; &lt;li&gt;100yy 复制光标坐在行及以下共100行&lt;/li&gt; &lt;li&gt;yw 复制光标开始的第一个单词&lt;/li&gt; &lt;li&gt;y$ 复制光标到行尾&lt;/li&gt; &lt;li&gt;yG 复制光标所在行到文本的结束&lt;/li&gt; &lt;li&gt;yH 复制文本开始到光标所在行的文本&lt;/li&gt; &lt;li&gt;fa 移动光标到本行下一个a的字符处&lt;/li&gt; &lt;li&gt;Fa 反前移动光标到字符a处&lt;/li&gt; &lt;li&gt;nfa 移动光标到下第n个字符a处&lt;/li&gt; &lt;li&gt;nFa 向前移动光标到第n个字符a处&lt;/li&gt; &lt;li&gt;ta 移动光标到a字符的前一个字符&lt;/li&gt; &lt;li&gt;nta 移动光标到第n个a字符前一个字符&lt;/li&gt; &lt;li&gt;Ta 向前移动光标到a字符出现的后一个字符&lt;/li&gt; &lt;li&gt;nTa 向前移动到第n个a字符出现后的一个字符&lt;/li&gt; &lt;li&gt;yfB 复制光标到第一个大写B中间的内容&lt;/li&gt; &lt;li&gt;y2fB 复制光标到第二个大写B中间的内容&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;剪切&quot;&gt;剪切&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;x...</description>
        <pubDate>Fri, 30 Aug 2019 18:48:05 +0800</pubDate>
        <link>/vim/</link>
        <guid isPermaLink="true">/vim/</guid>
        
        <category>tips</category>
        
        <category>VIM</category>
        
        <category>tips</category>
      </item>
    
      <item>
        <title>笔记模板</title>
        <description>&lt;p&gt;Cas sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt; &lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt; &lt;p&gt;HTML defines a long list of available inline tags, a complete list of...</description>
        <pubDate>Fri, 17 May 2019 07:48:05 +0800</pubDate>
        <link>/%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/</link>
        <guid isPermaLink="true">/%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/</guid>
        
        <category>template</category>
        
        <category>blog</category>
        
        <category>blog</category>
      </item>
    
      <item>
        <title>笔记模板</title>
        <description>&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt; &lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam...</description>
        <pubDate>Fri, 17 May 2019 07:48:05 +0800</pubDate>
        <link>/%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/2/</link>
        <guid isPermaLink="true">/%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/2/</guid>
        
        <category>template</category>
        
        <category>blog</category>
        
        <category>blog</category>
      </item>
    
      <item>
        <title>笔记模板</title>
        <description>&lt;p&gt;Cas sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt; &lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt; &lt;p&gt;HTML defines a long list of available inline tags, a complete list of...</description>
        <pubDate>Fri, 17 May 2019 07:48:05 +0800</pubDate>
        <link>/%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/view-all/</link>
        <guid isPermaLink="true">/%E7%AC%94%E8%AE%B0%E6%A8%A1%E6%9D%BF/view-all/</guid>
        
        <category>template</category>
        
        <category>blog</category>
        
        <category>blog</category>
      </item>
    
  </channel>
</rss>
